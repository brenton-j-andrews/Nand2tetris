// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    Not (in=sel[0], out=notsel0);
    Not (in=sel[1], out=notsel1);
    Not (in=sel[2], out=notsel2);

    /** Output A */
    And (a=notsel0, b=notsel1, out=selA1);
    And (a=selA1, b=notsel2, out=selA2);
    And (a=selA2, b=in, out=a);

    /** Output B */
    And (a=sel[0], b=notsel1, out=selB1);
    And (a=selB1, b=notsel2, out=selB2);
    And (a=selB2, b=in, out=b);

    /** Output C */
    And (a=notsel0, b=sel[1], out=selC1);
    And (a=selC1, b=notsel2, out=selC2);
    And (a=selC2, b=in, out=c);
 
    /** Output D */
    And (a=sel[0], b=sel[1], out=selD1);
    And (a=selD1, b=notsel2, out=selD2);
    And (a=selD2, b=in, out=d);

    /** Output E */
    And (a=notsel0, b=notsel1, out=selE1);
    And (a=selE1, b=sel[2], out=selE2);
    And (a=selE2, b=in, out=e);

    /** Output F */
    And (a=sel[0], b=notsel1, out=selF1);
    And (a=selF1, b=sel[2], out=selF2);
    And (a=selF2, b=in, out=f);

    /** Output G */
    And (a=notsel0, b=sel[1], out=selG1);
    And (a=selG1, b=sel[2], out=selG2);
    And (a=selG2, b=in, out=g);

    /** Output H */
    And (a=sel[0], b=sel[1], out=selH1);
    And (a=selH1, b=sel[2], out=selH2);
    And (a=selH2, b=in, out=h);

